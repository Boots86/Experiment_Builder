const gameTableHTML=document.getElementById("game-table"),modeSelect=document.getElementById("mode-setting"),newCellClassName="new-cell",cellIDName="game-cell-id-",flagClassName="cell-flag",setupGame=()=>{CONFIG.currentMode=modeSelect.value;const e=getCurrentGameMode(),t=e.bombs,n=e.size,m=n.rows,l=n.cols;document.getElementById("score-sheet").style.display="none",document.getElementById("score-display").innerHTML=0;const a=[];let r,o,s,i,d,c,g,u,b,I=1e4;for(;a.length<t&&I>0;)r=Math.floor(Math.random()*(m*l))+1,-1===a.indexOf(r)&&a.push(r),I--;for(CONFIG.bombLocations=a,gameTableHTML.innerHTML="",o=0;o<m;o++)for(i=gameTableHTML.insertRow(o),s=1;s<=l;s++)(d=i.insertCell(s-1)).classList.add("new-cell"),d.setAttribute("row",o),d.setAttribute("col",s),c=makeCellID(o,s),d.id=cellIDName+c,b="",a.indexOf(c)>-1?(b="x",d.setAttribute("hasBomb",1)):(g=0,getCellIDsAround(o,s).map(e=>{a.indexOf(e)>-1&&g++}),g&&(b=g),d.setAttribute("bombsAroundCell",g)),(u=document.createElement("span")).classList.add("cell-content"),u.innerHTML=b,d.appendChild(u);CONFIG.gamePlayable=!0,setBombsRemaining(),timerControl("start")},getCellIDsAround=(e,t)=>{const n=getCurrentGameMode(),m=n.size.rows,l=n.size.cols,a=e+2,r=t+2,o=[];let s,i,d;for(s=e-1;s<a;s++)for(i=t-1;i<r;i++)d=makeCellID(s,i),s>=0&&s<m&&i>0&&i<=l&&makeCellID(e,t)!==d&&o.push(d);return o},makeCellID=(e,t)=>{return e*getCurrentGameMode().size.cols+t},getCurrentGameMode=()=>CONFIG.mode[CONFIG.currentMode],newCellClicked=(e,t)=>{const n=parseInt(e.getAttribute("row"),10),m=parseInt(e.getAttribute("col"),10),l=1===parseInt(e.getAttribute("hasBomb"),10),a=parseInt(e.getAttribute("bombsAroundCell"),10),r=CONFIG.mode[CONFIG.currentMode].maxTime,o=CONFIG.gameScoreMulti;if(!0===t){const t=1===parseInt(e.getAttribute("markedAsBomb"),10);if(e.setAttribute("markedAsBomb",t?0:1),t){const t=e.getElementsByClassName("cell-flag");e.removeChild(t[0])}else{const t=document.createElement("IMG");t.setAttribute("src","images/clue.svg"),t.setAttribute("width","100%"),t.setAttribute("height","100%"),t.setAttribute("alt","Flag"),t.classList.add("cell-flag"),e.appendChild(t),e.setAttribute("hasFlag",1)}setBombsRemaining()}else{if(l)return timerControl(),document.getElementById("score-sheet").style.display="flex",document.getElementById("score-head").innerHTML="Better Luck Next Time!",document.getElementById("final-time").innerHTML=timerTime,document.getElementById("final-msg").innerHTML="You didn't have enough information to start working on your experiment, you can do some more research and try again.",document.getElementById("maximum-time").innerHTML=r,CONFIG.bombLocations.map(t=>{e=document.getElementById(cellIDName+t),bombImage=document.createElement("IMG"),bombImage.setAttribute("src","images/research.svg"),bombImage.setAttribute("width","100%"),bombImage.setAttribute("height","100%"),bombImage.setAttribute("alt","Bomb"),bombImage.classList.add("cell-flag"),e.innerHTML="",e.appendChild(bombImage),e.setAttribute("hasFlag",0)}),void(CONFIG.gamePlayable=!1);e.classList.remove("new-cell"),0===a&&getCellIDsAround(n,m).map(e=>{let t;(t=document.getElementById(cellIDName+e))&&t.matches(".new-cell")&&1!==parseInt(t.getAttribute("hasFlag"),10)&&newCellClicked(t)})}const s=CONFIG.bombLocations,i=currentMarkedBombs();if(s.length===i.length){let e=0;i.map(t=>{s.indexOf(t)>-1&&e++}),e===s.length&&(timerControl(),CONFIG.gamePlayable=!1,document.getElementById("score-sheet").style.display="flex",document.getElementById("score-head").innerHTML="Well Done!",document.getElementById("final-time").innerHTML=timerTime,document.getElementById("final-msg").innerHTML="Great work, you are now ready to do an experiment.",document.getElementById("maximum-time").innerHTML=r,document.getElementById("score-display").innerHTML=Math.max(0,r-timerTime)*o)}},currentMarkedBombs=()=>{const e=gameTableHTML.getElementsByClassName("cell-flag"),t=e.length;let n,m,l=[];for(n=0;n<t;n++)m=e[n].parentNode,l.push(makeCellID(parseInt(m.getAttribute("row"),10),parseInt(m.getAttribute("col"),10)));return l},setBombsRemaining=()=>{document.getElementById("game-bombs-remaining").innerHTML=CONFIG.bombLocations.length-currentMarkedBombs().length},timerHTML=document.getElementById("game-timer");let timerInterval,timerTime=0;const timerControl=e=>{clearInterval(timerInterval),"start"===e&&(timerTime=0,timerInterval=setInterval(()=>{timerTime++,timerHTML.innerHTML=timerTime},1e3))};(()=>{let e;Object.keys(CONFIG.mode).forEach(t=>{(e=document.createElement("option")).value=t,e.text=CONFIG.mode[t].name,modeSelect.add(e)}),setupGame(),gameTableHTML.onmousedown=(e=>{if(e=e||window.event,!CONFIG.gamePlayable)return;let t,n,m=e.target;"which"in e?t=3===e.which:"button"in e&&(t=2===e.button),(n=m.matches(".cell-flag")&&t)&&(m=m.parentNode),(m.matches(".new-cell")||n)&&newCellClicked(m,t),gameTableHTML.oncontextmenu=(()=>!1),document.getElementById("score-sheet").oncontextmenu=(()=>!1)})})();